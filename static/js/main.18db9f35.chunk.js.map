{"version":3,"sources":["components/Header.jsx","components/ImageCard.jsx","static/places.js","components/PlacesToVisit.jsx","components/Register.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","fontFamily","color","display","justifyContent","alignItems","height","appbar","background","icon","fontSize","title","flexGrow","sigColor","appbarWrapper","width","margin","container","textAlign","maintext","expandIcon","Header","classes","className","AppBar","elevation","Toolbar","IconButton","to","smooth","maxWidth","media","fontWeight","desc","content","ImageCard","props","Card","CardMedia","image","places","imageUrl","CardContent","Typography","gutterBottom","variant","component","Places","process","direction","time","console","log","breakpoints","down","flexDirection","PlacesToVisit","id","minHeight","label","marginTop","marginBottom","input","button","Register","Input","placeholder","inputProps","style","Button","backgroundImage","backgrounfSize","backgroundRepeat","backgroundSize","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.18db9f35.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar,IconButton, Toolbar} from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link as Scroll } from 'react-scroll'\r\nconst useStyles=makeStyles((theme)=>({\r\n        root:{\r\n            fontFamily: \"Nunito\",   \r\n            color:\"#fff\",\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"center\",\r\n           \r\n            height:\"100vh\"\r\n        },\r\n        appbar:{\r\n            background:\"none\", \r\n                \r\n        },\r\n        icon:{\r\n            color:\"#fff\",\r\n            fontSize:\"2rem\"\r\n        },\r\n        title:{\r\n            \r\n            flexGrow:\"1\",\r\n            \r\n        },\r\n        sigColor:{\r\n            color:\"#ff5722\"\r\n\r\n        },\r\n        appbarWrapper:{\r\n            width:\"80%\",\r\n            margin:\"0 auto\",\r\n        },\r\n        container:{\r\n            color:\"#fff\",\r\n            textAlign:\"center\",\r\n        },\r\n        maintext:{\r\n            fontSize:\"4rem\"\r\n        },\r\n        expandIcon:{\r\n            fontSize:\"4rem\",\r\n            color:\"white\"  \r\n                    \r\n        }\r\n\r\n}));\r\n\r\nfunction Header() {\r\n  const classes=useStyles();\r\n  return (\r\n   <div className={classes.root} >\r\n    <AppBar  className={classes.appbar} elevation={0}  >\r\n        <Toolbar className={classes.appbarWrapper}>\r\n        \r\n                <h1 className={classes.title}>The <span className={classes.sigColor}>travelers</span></h1>\r\n                <IconButton>\r\n                    <SortIcon className={classes.icon}/>\r\n                </IconButton>\r\n\r\n        </Toolbar>\r\n    </AppBar>\r\n    <div className={classes.container}>\r\n        <h1 className={classes.maintext}>Welcome to our <span className={classes.sigColor}>page</span></h1>\r\n        <Scroll to=\"places-to-visit\" smooth={true}>\r\n          <IconButton >\r\n             <ExpandMoreIcon  className={classes.expandIcon}/>\r\n           </IconButton>\r\n       </Scroll>\r\n        \r\n    </div>\r\n   \r\n   \r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 545,\r\n  \r\n    background:\"rgb(0,0,0,0.5)\",\r\n    margin:\"20px\",\r\n    \r\n   \r\n    \r\n  },\r\n  media: {\r\n    height: 205,\r\n  },\r\n  title:{\r\n      fontFamily:\"Nunito\",\r\n      fontSize:\"2rem\",\r\n      fontWeight:\"bold\",\r\n      color:\"#fff\",\r\n\r\n  },\r\n  desc:{\r\n    fontFamily:\"Nunito\",\r\n    fontSize:\"1.1rem\",\r\n    color:\"#ddd\",\r\n  },\r\n  content:{\r\n    \r\n  }\r\n});\r\n\r\nexport default function ImageCard(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      \r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.places.imageUrl}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\" >\r\n            {props.places.title}\r\n          </Typography>\r\n          <Typography className={classes.desc} variant=\"body2\"  component=\"p\">\r\n            {props.places.desc}\r\n          </Typography>\r\n        </CardContent>\r\n     \r\n    </Card>\r\n  );\r\n}\r\n\r\n","const Places=[\r\n    {\r\n        title:\"Green\",\r\n        desc:\"The Maldives are home to some of the worlds most ravishing islands, \",\r\n        imageUrl:process.env.PUBLIC_URL+'/assets/Image3.jpg',\r\n        direction:\"left\",\r\n        time: 1500,\r\n    },\r\n    {\r\n        title:\"Bora Bora\",\r\n        desc:\"Shaped like a giant sombrero, This lush resorts stars on countles beautiful sunsets\",\r\n        imageUrl:process.env.PUBLIC_URL+'/assets/image1.jpg',\r\n        direction:'right',\r\n        time:1500,\r\n    }\r\n]\r\nexport default Places;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageCard from \"./ImageCard\";\r\nimport Places from '../static/places';\r\n\r\nconsole.log(Places[0].imageUrl);\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n  root:{\r\n      height:\"90vh\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\",\r\n      \r\n         [ theme.breakpoints.down(\"sm\")]:{\r\n             flexDirection:\"column\",\r\n            height:\"738px\"\r\n         }\r\n      \r\n\r\n  },\r\n}))\r\n\r\nfunction PlacesToVisit() {\r\n  const classes=useStyles();\r\n  return (\r\n   <div className={classes.root} id=\"places-to-visit\">\r\n      <ImageCard places={Places[0]}/>\r\n      <ImageCard places={Places[1]}/>\r\n\r\n\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default PlacesToVisit;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Input } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles=makeStyles((theme)=>({\r\n  root:{\r\n    minHeight:'40vh',\r\n    textAlign:\"center\",\r\n    alignItems:\"center\"\r\n\r\n  },\r\n  label:{\r\n\r\n    marginTop:\"8% \",\r\n    marginBottom:\"2%\",\r\n    display:\"block\",\r\n    color:\"white\",\r\n    fontFamily:\"Nunito\",\r\n    fontSize:\"1.5rem\",\r\n    \r\n  },\r\n  input:{\r\n    color:'white',\r\n    textAlign:\"center\",\r\n    },\r\n  button:{\r\n        display:\"block\",\r\n        margin:\"5px auto\"\r\n\r\n    }\r\n}))\r\n\r\nfunction Register() {\r\n  const classes=useStyles();\r\n  return (\r\n   <div className={classes.root}>\r\n    <label className={classes.label}>Register and get free updates</label>\r\n     <Input className={classes.input} color=\"secondary\" placeholder=\"Email\" inputProps={{ style: {textAlign: 'center'} }} />\r\n     <Button className={classes.button} color=\"primary\">Subscribe</Button>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {CssBaseline} from '@material-ui/core';\nimport Header from \"./components/Header\";\nimport PlacesToVisit from './components/PlacesToVisit';\nimport Register from './components/Register';\nconst useStyles=makeStyles((theme)=>({\n  root:{\n    minHeight:'100vh',\n   \n    backgroundImage:`url(${process.env.PUBLIC_URL+'/assets/mainImage.jpg'})`,\n    backgrounfSize:\"cover\",\n    backgroundRepeat:\"no-repeat\",\n    backgroundSize:\"cover\"\n   \n  \n  },\n}))\n\nfunction App() {\n  const classes=useStyles();\n  return (\n   <div className={classes.root}>\n      <Header/>\n      <CssBaseline/>\n      <PlacesToVisit/>\n      <Register/>\n\n   </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}